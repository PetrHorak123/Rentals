@model Rentals.Web.Areas.Admin.Models.ItemTypesViewModel
@using Rentals.Web.Localization

@{
    ViewBag.Title = Admin.Calendar;
}

<h2 class="row">
    @Admin.Calendar
    @Html.ActionLink("Do Reactu", "ToReact", "React", new { area = "", user = User.ToString() }, new { @class = "btn btn-info pull-right" })
    @Html.ActionLink(Admin.Renting_Create, "Create", "Renting", null, new { @class = "btn btn-primary pull-right" })
</h2>

<div class="row">
    <div class="col-xs-12 list-group-item">
        <details class="itemsOverview">
            <summary style="outline: none">
                <div class="row">
                    <div class="col-xs-12 col-md-10">
                        <h4 class="row name">
                            @Admin.Calendar_ItemsOverview
                        </h4>
                    </div>
                    <div class="col-xs-12 col-md-2">
                        
                    </div>
                </div>
            </summary>
            <div class="row padding-1">
                <form id="itemChooser">
                    @foreach (var item in Model.ItemTypes)
                    {
                        <div class="col-xs-12 col-sm-6 col-md-4">
                            <input id="@item.Name" type="checkbox" name="@item.Name" value="@item.Id" checked="checked">
                            <label for="@item.Name"> @item.Name</label><br>
                        </div>
                    }
                </form>
            </div>
        </details>
    </div>


</div>

<div class="row">
    <div id="calendar" class="col-xs-12 margin-top-1"></div>
</div>


<script type="text/javascript">
    jq = jQuery.noConflict(false);

	jq(document).ready(function () {
        var searchIDs = jq("#itemChooser input:checkbox:checked").map(function () {
            return parseInt(jq(this).val());
        }).get();;

        jq('#itemChooser :checkbox').change(function () {
            searchIDs = jq("#itemChooser input:checkbox:checked").map(function () {
                return parseInt(jq(this).val());
            }).get();   
            jq("#calendar").fullCalendar('refetchEvents');
        });

		jq("#calendar").fullCalendar({
            defaultView: "month",    
            height: "auto",
            eventOverlap: false,
			locale: "cs",
            slotDuration: "00:@Model.Rental.MinTimeUnit:00",
            allDaySlot: false,
            eventRender: function (eventObj, $el) {
                $el.popover({
                    title: eventObj.title,
                    content: eventObj.description,
                    trigger: 'hover',
                    placement: 'top',
                    container: 'body'
                });
            },
			events: function (start, end, timezone, callback) {
                console.log(searchIDs);
				jq.ajax({
					url: '@Url.Action("GetCalendarEventsForSelectedItemTypes", "Calendar")',
					method: 'get',
					traditional: true,
					data: {
                        itemtypes: searchIDs,
						from: start.toJSON(),
						to: end.toJSON()
					},
					success: function (data) {
						callback(data);
					},
					error: function () {
						alert("Kalendářová chyba");
					}
				});
			}
		});
	});
</script>